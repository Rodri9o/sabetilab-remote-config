
require 'yaml'
settings = YAML.load_file('../settings_manager.yml', Loader=yaml.FullLoader)

Vagrant.configure(2) do |config|
  config.vm.box       = 'manager'
  config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
  config.ssh.username = 'ubuntu'
  config.vm.hostname = 'manager'

  config.vm.define "manager" do |manager|
    # depends on: vagrant-aws, vagrant-aws-route53
    manager.vm.provider :aws do |aws, override|
      aws.access_key_id             = settings["aws_access_key_id"]
      aws.secret_access_key         = settings["aws_secret_access_key"]

      # ubuntu AMI, see: https://cloud-images.ubuntu.com/locator/ec2/
      # wily 15.10, amd64 hvm:ebs @ eu-west-1    
      aws.ami                       = settings["ami_id"]
      aws.instance_ready_timeout    = 180 # default: 120
      aws.region                    = settings["ec2_region"]
      aws.instance_type             = settings["ec2_instance_type"]
      aws.keypair_name              = settings["aws_keypair_name"]
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 50 }]

      override.vm.synced_folder ".", "/vagrant", disabled: true

      override.route53.hosted_zone_id = settings["aws_hosted_zone_id"]
      override.route53.record_set     = [settings["subdomain_name"]+"."+settings["domain_name"]+".", 'A'] # literal notation: %w(manager.sabeti-aws.net. A)

      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = settings["aws_ec2_private_key_path"]

      override.vm.provision "ansible" do |ansible|
        ansible.playbook = "manager-base.yml"
        ansible.groups = {
          "managers" => ["manager"]
        }
        #ansible.verbose = "vvvv" # for verbose ansible output
        #ansible.inventory_path = "../production"
        ansible.extra_vars = {
          ansible_user: "ubuntu",
        }
        ansible.extra_vars["github_usernames_with_access"] = settings["github_usernames_with_access"]
        ansible.extra_vars["github_usernames_with_sudo_access"] = settings["github_usernames_with_sudo_access"]
        ansible.extra_vars["domain_name"] = settings["domain_name"]
        ansible.extra_vars["subdomain_name"] = settings["subdomain_name"]
      end
    end
  end
end